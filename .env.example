# =================================================================
# CORE APPLICATION SETTINGS
# =================================================================
# Generate strong secrets: python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
SECRET_KEY=your-super-secret-django-key-change-this-in-production-min-50-chars
JWT_SECRET_KEY=your-jwt-secret-key-different-from-django-secret-min-50-chars
JWT_ALGORITHM=HS256

# Development/Production Mode
DEBUG=False  # Set to True for development, False for production
ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0  # Add your domain for production

# =================================================================
# DATABASE CONFIGURATION
# =================================================================
# PostgreSQL Database Settings
DB_NAME=codementorx_db
DB_USER=codementorx_user
DB_PASSWORD=your-secure-database-password
DB_HOST=postgres  # Use 'postgres' for Docker, 'localhost' for local development
DB_PORT=5432

# Database URLs (automatically constructed)
DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
# For local development (non-Docker):
# DATABASE_URL=postgresql://codementorx_user:your-password@localhost:5432/codementorx_db

# =================================================================
# FASTAPI CHATBOT CONFIGURATION
# =================================================================
# OpenAI API Configuration
AI_MODEL_NAME=gpt-4o-mini  # or gpt-3.5-turbo, gpt-4, etc.
OPENAI_API_KEY=sk-your-openai-api-key-here
OPENAI_API_BASE=https://api.openai.com/v1

# FastAPI Server Configuration
FASTAPI_HOST=0.0.0.0  # Listen on all interfaces (container networking)
FASTAPI_PORT=8001     # FastAPI service port

# =================================================================
# API URLS & SERVICE COMMUNICATION
# =================================================================
# External API URLs (host machine access)
DJANGO_API_URL=http://localhost:8000
FASTAPI_URL=http://localhost:8001

# Internal API URLs (container-to-container communication)
DJANGO_API_URL_INTERNAL=http://django:8000
FASTAPI_URL_INTERNAL=http://fastapi:8001

# Frontend Environment Variables (React/Vite)
VITE_DJANGO_API_URL=http://localhost:8000
VITE_CHATBOT_API_URL=http://localhost:8001/api
VITE_APP_NAME=CodementorX

# =================================================================
# JWT TOKEN CONFIGURATION
# =================================================================
JWT_ACCESS_TOKEN_LIFETIME=60    # Access token lifetime in minutes
JWT_REFRESH_TOKEN_LIFETIME=7    # Refresh token lifetime in days

# =================================================================
# CORS SETTINGS
# =================================================================
# Allowed origins for CORS (comma-separated)
# Development:
CORS_ALLOWED_ORIGINS=http://localhost:5173,http://127.0.0.1:5173,http://localhost:3000,http://127.0.0.1:3000,http://localhost:8000,http://127.0.0.1:8000,http://localhost:8001,http://127.0.0.1:8001
# Production: Add your actual domains
# CORS_ALLOWED_ORIGINS=https://yourdomain.com,https://api.yourdomain.com

# =================================================================
# DJANGO SPECIFIC SETTINGS
# =================================================================
DJANGO_DEBUG=False  # Same as DEBUG, but explicitly for Django
DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,django,fastapi,react
# For production, add your domains:
# DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,yourdomain.com,api.yourdomain.com

# Auto-create superuser on first Docker run (optional)
DJANGO_SUPERUSER_EMAIL=admin@codementorx.com
DJANGO_SUPERUSER_PASSWORD=change-this-admin-password

# =================================================================
# EMAIL CONFIGURATION
# =================================================================
# Email Backend
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
# For development/testing:
# EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend

# SMTP Settings (Gmail example)
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=your-email@gmail.com
EMAIL_HOST_PASSWORD=your-gmail-app-password  # Use App Password, not regular password

# Alternative SMTP providers:
# SendGrid:
# EMAIL_HOST=smtp.sendgrid.net
# EMAIL_PORT=587
# EMAIL_HOST_USER=apikey
# EMAIL_HOST_PASSWORD=your-sendgrid-api-key

# AWS SES:
# EMAIL_BACKEND=django_ses.SESBackend
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# AWS_SES_REGION_NAME=us-east-1

# =================================================================
# FRONTEND CONFIGURATION
# =================================================================
FRONTEND_URL=http://localhost:5173  # React development server
# For production:
# FRONTEND_URL=https://yourdomain.com

# =================================================================
# SECURITY SETTINGS (PRODUCTION)
# =================================================================
# HTTPS Security Headers
SECURE_HSTS_SECONDS=31536000  # 1 year
SECURE_HSTS_INCLUDE_SUBDOMAINS=True
SECURE_HSTS_PRELOAD=True

# SSL/HTTPS Settings (set to True for production with HTTPS)
SECURE_SSL_REDIRECT=False      # Set to True in production with HTTPS
SESSION_COOKIE_SECURE=False    # Set to True in production with HTTPS  
CSRF_COOKIE_SECURE=False       # Set to True in production with HTTPS

# =================================================================
# DOCKER DEVELOPMENT SETTINGS
# =================================================================
DOCKER_DEVELOPMENT=True
COMPOSE_PROJECT_NAME=codementorx

# =================================================================
# AWS DEPLOYMENT SETTINGS (for later use)
# =================================================================
# AWS RDS Database (uncomment when using AWS RDS)
# AWS_RDS_HOSTNAME=your-rds-endpoint.region.rds.amazonaws.com
# AWS_RDS_PORT=5432
# AWS_RDS_DB_NAME=codementorx_db
# AWS_RDS_USERNAME=your-rds-username
# AWS_RDS_PASSWORD=your-rds-password

# AWS S3 Static Files (uncomment when using S3)
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key  
# AWS_STORAGE_BUCKET_NAME=your-s3-bucket-name
# AWS_S3_REGION_NAME=us-east-1
# AWS_S3_CUSTOM_DOMAIN=your-cloudfront-domain  # Optional: CloudFront CDN

# AWS EC2 Settings
# EC2_PUBLIC_IP=your-ec2-public-ip
# EC2_DOMAIN=your-domain-or-ip.com

# =================================================================
# MONITORING & LOGGING (OPTIONAL)
# =================================================================
# Application Monitoring
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Logging Level
LOG_LEVEL=INFO  # DEBUG, INFO, WARNING, ERROR, CRITICAL

# =================================================================
# DEVELOPMENT OVERRIDES
# =================================================================
Uncomment these for local development outside Docker:
DB_HOST=localhost
DATABASE_URL=postgresql://codementorx_user:password@localhost:5432/codementorx_db
DJANGO_DEBUG=True
DEBUG=True
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend

# =================================================================
# COMMON ENVIRONMENT VALUES
# =================================================================
#Development:
DEBUG=True
DJANGO_DEBUG=True
DB_HOST=localhost
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend

# Docker Development:
DEBUG=False
JANGO_DEBUG=False
B_HOST=postgres
MAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend

# Production:
DEBUG=False
DJANGO_DEBUG=False
SECURE_SSL_REDIRECT=True
SESSION_COOKIE_SECURE=True
CSRF_COOKIE_SECURE=True
ALLOWED_HOSTS=yourdomain.com,api.yourdomain.com